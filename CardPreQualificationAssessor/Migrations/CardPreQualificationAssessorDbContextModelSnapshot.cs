// <auto-generated />
using System;
using CardPreQualificationAssessor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CardPreQualificationAssessor.Migrations
{
    [DbContext(typeof(CardPreQualificationAssessorDbContext))]
    partial class CardPreQualificationAssessorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CardCardRequest", b =>
                {
                    b.Property<int>("CardRequestsId")
                        .HasColumnType("int");

                    b.Property<int>("SuitableCardsId")
                        .HasColumnType("int");

                    b.HasKey("CardRequestsId", "SuitableCardsId");

                    b.HasIndex("SuitableCardsId");

                    b.ToTable("CardCardRequest");
                });

            modelBuilder.Entity("CardPreQualificationAssessor.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("APR")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionalMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            APR = 6.2000000000000002,
                            Name = "Barclays",
                            PromotionalMessage = "Hello"
                        },
                        new
                        {
                            Id = 2,
                            APR = 12.699999999999999,
                            Name = "Santander",
                            PromotionalMessage = "Goodbye"
                        },
                        new
                        {
                            Id = 3,
                            APR = 0.80000000000000004,
                            Name = "Vanquis",
                            PromotionalMessage = "Wow"
                        });
                });

            modelBuilder.Entity("CardPreQualificationAssessor.Models.CardRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("CardRequests", (string)null);
                });

            modelBuilder.Entity("CardCardRequest", b =>
                {
                    b.HasOne("CardPreQualificationAssessor.Models.CardRequest", null)
                        .WithMany()
                        .HasForeignKey("CardRequestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardPreQualificationAssessor.Models.Card", null)
                        .WithMany()
                        .HasForeignKey("SuitableCardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CardPreQualificationAssessor.Models.CardRequest", b =>
                {
                    b.OwnsOne("CardPreQualificationAssessor.Models.Applicant", "Applicant", b1 =>
                        {
                            b1.Property<int>("CardRequestId")
                                .HasColumnType("int");

                            b1.Property<double?>("AnnualIncome")
                                .IsRequired()
                                .HasColumnType("float");

                            b1.Property<DateTime?>("DateOfBirth")
                                .IsRequired()
                                .HasColumnType("datetime2");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CardRequestId");

                            b1.ToTable("CardRequests");

                            b1.WithOwner()
                                .HasForeignKey("CardRequestId");
                        });

                    b.Navigation("Applicant")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
